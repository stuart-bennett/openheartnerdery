@function pixels-to-ems($px, $baseline: 16) {
	@return ($px/$baseline) + 0em;
}

@mixin contentBlock() {
	margin-bottom: $contentBlockPaddingBottom;
}

@mixin clearFix() {
  content: ".";
  display: block;
  height: 0;
  clear: both;
  visibility: hidden;
}

@mixin breakpoint($point) {
  @if $point == hero-gets-too-narrow {
    @media (max-width: 858px) { @content; }
  }
  @if $point == so-narrow-that-header-wraps {
    @media (max-width: 577px) { @content; }
  }  
  @if $point == wide-hero {
    @media (min-width: 859px) { @content; }
  }
  @if $point == really-wide {
    @media (min-width: 1280px) { @content; }
  }
  @if $point == resume-core-skills-wrap {
    @media (max-width: 997px) { @content; }
  }
}

@mixin hdAwareBackgroundImage($imgWithoutExtension, $extension) {
    @media
    only screen and (-webkit-min-device-pixel-ratio: 1),
    only screen and (-min--moz-device-pixel-ratio: 1),
    only screen and (min--moz-device-pixel-ratio: 1),
    only screen and (min-resolution: 1dppx)
    {
      background-image: url($imgWithoutExtension+"."+$extension);
    }

    @media
    only screen and (-webkit-min-device-pixel-ratio: 1.5),
    only screen and (-min--moz-device-pixel-ratio: 1.5),
    only screen and (min--moz-device-pixel-ratio: 1.5),
    only screen and (min-resolution: 1.5dppx) 
    {
      background-image: url($imgWithoutExtension+"@1.5x."+$extension);
    }      
    
    @media
    only screen and (-webkit-min-device-pixel-ratio: 2),
    only screen and (-min--moz-device-pixel-ratio: 2),
    only screen and (min--moz-device-pixel-ratio: 2),
    only screen and (min-resolution: 2dppx) 
    {
      background-image: url($imgWithoutExtension+"@2x."+$extension);
    }
}

// From: https://gist.github.com/Integralist/3931680
@mixin animation ($delay, $duration, $animation) {
    -webkit-animation-delay: $delay;
    -webkit-animation-duration: $duration;
    -webkit-animation-name: $animation;
    -webkit-animation-fill-mode: forwards; /* this prevents the animation from restarting! */
 
    -moz-animation-delay: $delay;
    -moz-animation-duration: $duration;
    -moz-animation-name: $animation;
    -moz-animation-fill-mode: forwards; /* this prevents the animation from restarting! */
 
    -o-animation-delay: $delay;
    -o-animation-duration: $duration;
    -o-animation-name: $animation;
    -o-animation-fill-mode: forwards; /* this prevents the animation from restarting! */
 
    animation-delay: $delay;
    animation-duration: $duration;
    animation-name: $animation;
    animation-fill-mode: forwards; /* this prevents the animation from restarting! */
}

// from https://gist.github.com/ericam/1607696
@mixin keyframes($name) {
  @-webkit-keyframes #{$name} {
    @content; 
  }
  @-moz-keyframes #{$name} {
    @content;
  }
  @-ms-keyframes #{$name} {
    @content;
  }
  @keyframes #{$name} {
    @content;
  } 
}